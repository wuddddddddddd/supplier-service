plugins {
    id 'org.springframework.boot' version '2.2.8.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
}

group = 'com.sole.saas'
version = version().getProperty("VERSION")
sourceCompatibility = '1.8'

def version() {
    def properties = new Properties()
    file("src/main/resources/jenkins/jenkins.properties").withInputStream() { input ->
        properties.load(input)
    }
    print properties.getProperty("VERSION")
    properties
}

ext {
    set('springCloudAlibabaVersion', "2.2.3.RELEASE")
    set('springCloudVersion', "Hoxton.SR4")
    set("mavenIp", "http://192.168.5.106:8081/repository/maven-public/")
}

repositories {
    maven { url "${mavenIp}" }
}

dependencies {

    implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config'
    implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery'
    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
    implementation 'org.springframework.boot:spring-boot-starter-undertow'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.cloud:spring-cloud-stream'
    implementation 'org.springframework.cloud:spring-cloud-stream-binder-rabbit'
    implementation  'org.springframework.boot:spring-boot-starter-data-redis-reactive'
    implementation "com.alibaba:druid-spring-boot-starter:latest.integration"

    implementation 'com.baomidou:mybatis-plus-boot-starter:3.4.1'
    implementation 'com.baomidou:mybatis-plus-generator:3.4.1'

    implementation 'mysql:mysql-connector-java:8.0.22'

    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'io.projectreactor:reactor-test'

    implementation 'com.sole.saas:common-service:0.0.176'
    implementation 'commons-beanutils:commons-beanutils:1.8.0'

    implementation 'com.alibaba:easyexcel:2.1.6'

    implementation 'net.logstash.logback:logstash-logback-encoder:6.5'
    implementation 'org.codehaus.janino:janino:3.1.2'
    implementation 'org.codehaus.janino:commons-compiler:3.1.2'
    implementation 'com.alibaba:fastjson:1.2.75'
    //redis连接池依赖包
    implementation 'org.apache.commons:commons-pool2'
    //okhttp
    implementation 'com.squareup.okhttp3:okhttp:4.9.0'
    implementation 'com.squareup.okio:okio:2.9.0'
    //lombok
    implementation 'org.projectlombok:lombok:1.18.10'
    annotationProcessor 'org.projectlombok:lombok:1.18.10'

    implementation 'com.alibaba:easyexcel:2.1.6'

    implementation 'com.sole.saas:job:2.2.0-v3'
    implementation 'org.codehaus.groovy:groovy:3.0.3'
    implementation 'io.netty:netty-all:4.1.48.Final'
    implementation 'cn.hutool:hutool-all:5.7.17'
    implementation 'org.mapstruct:mapstruct:1.4.1.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.1.Final'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.9'


}

dependencyManagement {
    imports {
        mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${springCloudAlibabaVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

processResources {
    from('src/main/java') {
        include '**/*.xml'
    }
}

test {
    useJUnitPlatform()
}
